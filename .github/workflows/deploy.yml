# 构建 VitePress 站点并将其部署到 GitHub Pages 的示例工作流程
#
name: Deploy Docs site to Pages

on:
  # 使用 `main` 分支作为默认分支
  push:
    branches: [main]

  # 允许你从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建工作
  build:
    name: 构建
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 如果未启用 lastUpdated，则不需要
      - uses: pnpm/action-setup@v3
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: pnpm install
      - name: Build with VitePress
        run: pnpm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .vitepress/dist
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_branch: dist
            publish_dir: .vitepress/dist
            force_orphan: true
  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: 部署Pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Sync to Gitee（gitee page已停止运营）
#  sync:
#    name: 同步到GITEE
#    needs: build
#    runs-on: ubuntu-latest
#    environment:
#      name: github-pages
#    env:
#      dst_key: ${{ secrets.GITEE_RSA_PRIVATE_KEY }}
#      dst_token: ${{ secrets.GITEE_TOKEN }}
#      gitee_user: "chengliang4810"
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          persist-credentials: false
#      - name: Sync to Gitee
#        uses: Yikun/hub-mirror-action@master
#        if: env.dst_key && env.dst_token && env.gitee_user
#        with:
#          # 必选，需要同步的 Github 用户（源）
#          src: 'github/${{ github.repository_owner }}'
#          # 必选，需要同步到的 Gitee 用户（目的）
#          dst: 'gitee/chengliang4810'
#          # 必选，Gitee公钥对应的私钥，https://gitee.com/profile/sshkeys
#          dst_key: ${{ secrets.GITEE_RSA_PRIVATE_KEY }}
#          # 必选，Gitee对应的用于创建仓库的token，https://gitee.com/profile/personal_access_tokens
#          dst_token: ${{ secrets.GITEE_TOKEN }}
#          # 如果是组织，指定组织即可，默认为用户 user
#          # account_type: org
#          # 直接取当前项目的仓库名
#          mappings: "${{ github.event.repository.name }}=>chengliang4810"
#          static_list: ${{ github.event.repository.name }}
#          force_update: true
#          # 还有黑、白名单，静态名单机制，可以用于更新某些指定库
#          # static_list: 'repo_name,repo_name2'
#
#
#      - name: Build Gitee Pages
#        uses: yanglbme/gitee-pages-action@main
#        env:
#          git_password: ${{ secrets.GIT_PASSWORD }}
#        with:
#          # 注意替换为你的 Gitee 用户名
#          gitee-username: chengliang4810
#          # 注意在 Settings->Secrets 配置 GITEE_PASSWORD
#          gitee-password: ${{ secrets.GIT_PASSWORD }}
#          # 注意替换为你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错
#          gitee-repo: chengliang4810/chengliang4810
#          # 要部署的分支，默认是 master，若是其他分支，则需要指定（指定的分支必须存在）
#          branch: dist
